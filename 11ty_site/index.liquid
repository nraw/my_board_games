---
pagination:
  data: filters
  size: 1
  alias: filter
	permalink: "/f/{{ filter.filter | slugify }}/s/{{ filter.sort | slugify }}.html"
---
<!doctype html>
<html lang="en">

<head>
	<meta charset="UTF-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1" />
	<title></title>
	<link href="{{'/style.css' | url }}" rel="stylesheet" />
</head>

<body class="dark:bg-slate-800 dark:text-white">
	<div class="" id="container">
		<div class = "">


			<div class="grid grid-cols-1 lg:grid-cols-8" id="all-players-table">
			{% assign sorted_players = suggested_players | sort: filter.sort | reverse %}

			{% for player_count in (1..8) %}
			<!-- n-players stats -->
				<div>
					<div id="players-{{ player_count }}"  > </div>
						<div class="sticky top-0 px-4 py-3 flex justify-between items-center font-semibold text-sm text-slate-900 dark:text-slate-200 bg-slate-50/90 dark:bg-slate-700/90 backdrop-blur-sm ring-1 ring-slate-900/10 dark:ring-black/10"">
							<div>
							<!-- left side -->
								Players: {{ player_count }}
							</div>
							<!-- end left side -->
							<!-- right side -->
							<div class='flex'>
								{% if filter.filter == "best-player" %}
								<a href="{{"/f"| url }}/all/s/{{ filter.sort |slugify }}.html#players-{{ player_count }}" class="flex items-center border border-blue-600 dark:border-blue-500 rounded px-1 my-1 mx-2" href="#">🔸</a>
								{% else %}
								<a href="{{"/f"| url }}/best-player/s/{{ filter.sort |slugify }}.html#players-{{ player_count }}" class="flex items-center border dark:border-white/50 rounded px-1 my-1 mx-2" href="#">🔸</a>
								{% endif %}
								<div class='flex items-center'>
									{% if filter.filter == "short" %}
										<a href="{{"/f" | url }}/not-short/s/{{ filter.sort | slugify }}.html#players-{{ player_count }}" class="text-blue-500 px-2 py-1 mx-1 text-sm">
										<i data-lucide="rabbit" class='w-3 m-0'></i>
									</a>
									{% elsif filter.filter == "not-short" %}
									<a href="{{"/f" | url }}/all/s/{{ filter.sort | slugify }}.html#players-{{ player_count }}" class="text-red-500 px-2 py-1 mx-1 text-sm">
										<i data-lucide="rabbit" class='w-3 m-0'></i>
									</a>
									{% else %}
									<a href="{{"/f" | url }}/short/s/{{ filter.sort | slugify }}.html#players-{{ player_count }}" class="px-2 py-1 mx-1 text-sm">
										<i data-lucide="rabbit" class='w-3 m-0'></i>
									</a>
									{% endif %}
									/
									{% if filter.filter == "long" %}
									<a href="{{"/f" | url }}/not-long/s/{{ filter.sort | slugify }}.html#players-{{ player_count }}" class="text-blue-500 px-2 py-1 mx-1 text-sm">
										<i data-lucide="snail" class='w-3 m-0'></i>
									</a>
									{% elsif filter.filter == "not-long" %}
									<a href="{{"/f" | url }}/all/s/{{ filter.sort | slugify }}#players-{{ player_count }}" class="text-red-500 px-2 py-1 mx-1 text-sm">
										<i data-lucide="snail" class='w-3 m-0'></i>
									</a>
									{% else %}
									<a href="{{"/f" | url }}/long/s/{{ filter.sort | slugify }}#players-{{ player_count }}" class="px-2 py-1 mx-1 text-sm">
										<i data-lucide="snail" class='w-3 m-0'></i>
									</a>
									{% endif %}
								</div>

								<div class='flex items-center'>
									{% if filter.filter == "light" %}
									<a href="{{"/f" | url }}/not-light/s/{{ filter.sort | slugify }}#players-{{ player_count }}" class="text-blue-500 px-2 py-1 mx-1 text-sm">
										<i data-lucide="feather" class='w-3 m-0'></i>
									</a>
								{% elsif filter.filter == "not-light" %}
									<a href="{{"/f" | url }}/all/s/{{ filter.sort | slugify }}#players-{{ player_count }}" class="text-red-500 px-2 py-1 mx-1 text-sm">
										<i data-lucide="feather" class='w-3 m-0'></i>
									</a>
									{% else %}
									<a href="{{"/f" | url }}/light/s/{{ filter.sort | slugify }}#players-{{ player_count }}" class="px-2 py-1 mx-1 text-sm">
										<i data-lucide="feather" class='w-3 m-0'></i>
									</a>
									{% endif %}
									/
									{% if filter.filter == "heavy" %}
									<a href="{{"/f" | url }}/not-heavy/s/{{ filter.sort | slugify }}#players-{{ player_count }}" class="text-blue-500 px-2 py-1 mx-1 text-sm">
										<i data-lucide="dumbbell" class='w-3 m-0'></i>
									</a>
								{% elsif filter.filter == "not-heavy" %}
									<a href="{{"/f" | url }}/all/s/{{ filter.sort | slugify }}#players-{{ player_count }}" class="text-red-500 px-2 py-1 mx-1 text-sm">
										<i data-lucide="dumbbell" class='w-3 m-0'></i>
									</a>
									{% else %}
									<a href="{{"/f" | url }}/heavy/s/{{ filter.sort | slugify }}#players-{{ player_count }}" class="px-2 py-1 mx-1 text-sm">
										<i data-lucide="dumbbell" class='w-3 m-0'></i>

									</a>
									{% endif %}

								</div>

							</div>
							<!-- end right side -->

						</div>
						<div id="magic-{{player_count}}" class="grid grid-cols-1 items-start  hover:items-stretch sorting_container">

						{% for game in sorted_players %} 
						{% case filter.filter %}
							{% when "short" %}
								{% assign should_display = game.playingtime < 21 %}
							{% when "not-short" %}
								{% assign should_display = game.playingtime > 20 %}
							{% when "long" %}
								{% assign should_display = game.playingtime > 89 %}
							{% when "not-long" %}
								{% assign should_display = game.playingtime < 90 %}
							{% when "light" %}
								{% assign should_display = game.stats.averageweight < 1.5 %}
							{% when "not-light" %}
								{% assign should_display = game.stats.averageweight > 1.5 %}
							{% when "heavy" %}
								{% assign should_display = game.stats.averageweight > 2 %}
							{% when "not-heavy" %}
								{% assign should_display = game.stats.averageweight < 2 %}
							{% when "best-player" %}
								{% assign should_display = game.is_best_player %}
							{% else %}
								{% assign should_display = true %}
						{% endcase %}
						{% if game.players ==player_count and should_display %}
						{% assign days_since = game.days_since_last_played | at_most: 360 %}
						<a class="shadow p-1 mx-2 my-1 text-sm rounded sortable" target=”_blank” href="{{ game.url }}" 
							data-name="{{ game.name}}"
							data-rating="{{ game.rating}}"
							data-numplays="{{ game.numplays}}"
							data-playingtime="{{ game.playingtime}}"
							data-days="{{ game.days_since_last_played}}"
							data-size="{{ game.size }}"
							>
							<div class="flex justify-between">

								<div class="truncate">

								{% if game.is_best_player %}
								🔸
								{% endif %}

								{{ game.name }}
								<span class="inline-flex text-gray-300 dark:text-slate-600 items-center">
									<span>- {{ game.rating }}</span>
									<i data-lucide="star" class='w-3 m-0'></i>

								</span>

								</div>
								<div class='flex'>

									<!-- Speed icon -->
									{% if game.playingtime < 21 %}
									<i data-lucide="rabbit" class='px-1'></i>
									{% elsif game.playingtime < 90 %}
									<!-- <i data-lucide="turtle" class='px-1'></i> -->
									{% else %}
									<i data-lucide="snail" class='px-1'></i>
									{% endif %}
									<!-- End Speeed icon -->

									<!-- Weight icon -->
									{% if game.stats.averageweight < 1.5 %}
									<i data-lucide="feather" class='px-1'></i>
									{% elsif game.stats.averageweight < 2.1 %}
									<!-- <i data-lucide="dumbbell" class='px-1'></i> -->
									{% elsif game.stats.averageweight < 5 %}
									<i data-lucide="dumbbell" class='px-1'></i>
									{% endif %}
									<!-- End Weight icon -->

									<!-- Numplays -->
									{% if game.numplays > 0 %}
										{% assign numplays_colors = "bg-blue-100 dark:bg-blue-900" %}
									{% else %}
										{% assign numplays_colors = "bg-red-100 dark:bg-red-700" %}
									{% endif %}
									<div class="{{ numplays_colors }} rounded-full px-2 text-center">
										{{ game.numplays }}<span class='text-xs'>x</span>
									</div>	
									<!-- End Numplays -->

								</div>
								
							</div>
							<!-- Progress -->
							{% if days_since > 359 %}
								{% assign days_colors = "bg-red-600 dark:bg-red-500" %}
							{% else %}
								{% assign days_colors = "bg-blue-600 dark:bg-blue-500" %}
							{% endif %}
							<div class="flex w-full h-1.5 bg-gray-200 rounded-full overflow-hidden dark:bg-neutral-700" role="progressbar" aria-valuenow="{{ days_since | divided_by: 3.6}}" aria-valuemin="0" aria-valuemax="100">
								<div class="{{ days_colors }} flex flex-col justify-center rounded-full overflow-hidden text-xs text-white text-center whitespace-nowrap transition duration-500" style="width: {{ days_since | divided_by: 3.6}}%"></div>
							</div>
							<!-- End Progress -->
						</a>
						{% endif %} 
						{% endfor %}
					</div>
				</div>
			<!-- n-players stats -->
				{% endfor %}
			</div>

				
		</div>

		<!-- Start Metrics section -->
		<section class="p-6 rounded-lg shadow-lg">
				<h2 class="text-2xl font-bold mb-4">Metrics</h2>
				<ul class="space-y-2">
						<li class="flex items-center">
								<span class="text-sm text-slate-400 w-1/2">Average number of days since last played:</span>
								<span class="font-semibold px-4">{{ metrics.average_days_since_last_played | round: 2 }}</span>
						</li>
						<li class="flex items-center">
								<span class="text-sm text-slate-400 w-1/2">Game that hasn't been played in the longest:</span>
								<span class="font-semibold px-4 w-1/2">{{ metrics.game_played_latest }}</span>
						</li>
						<li class="flex items-center">
								<span class="text-sm text-slate-400 w-1/2">Max days since last played:</span>
								<span class="font-semibold px-4 w-1/2">{{ metrics.max_days_since_last_played }}</span>
						</li>
						<li class="flex items-center">
								<span class="text-sm text-slate-400 w-1/2">Last game played:</span>
								<span class="font-semibold px-4 w-1/2">{{ metrics.game_last_played }}</span>
						</li>

						<li class="flex items-center">
								<span class="text-sm text-slate-400 w-1/2">Number of games:</span>
								<span class="font-semibold px-4 w-1/2">{{ metrics.num_games }}</span>
						</li>
				</ul>
		</section>
		<!-- End Metrics section -->

		<!-- Players Menu -->
		<div class="sticky bottom-0 grid grid-cols-9 grid-rows-1 z-10 w-full lg:hidden">
		{% for player_count in (1..8) %}
			<a class="px-4 py-3 flex items-center font-semibold text-sm text-slate-900 dark:text-slate-200 bg-slate-50/90 dark:bg-slate-700/90 backdrop-blur-sm ring-1 ring-slate-900/10 dark:ring-black/10" href="#players-{{ player_count }}">
				P{{ player_count }}
			</a>

		{% endfor %}

		<div id='reorder-button' data-index="0" class="px-3 py-3 flex items-center font-semibold 
			data-[index='0']:text-blue-500
			data-[index='1']:text-blue-900
			data-[index='2']:text-white
			data-[index='3']:text-slate-600
			data-[index='4']:text-purple-600
			  bg-slate-50/90 dark:bg-slate-700/90 backdrop-blur-sm ring-1 ring-slate-900/10 dark:ring-black/10" >
					<i data-lucide="arrow-down-up"></i>
			</div>
		</div>
		<!-- End Players Menu -->
	</div>
	{% comment %} <script src="{{"/script.js" | url }}"></script> {% endcomment %}
	<script>

// Get the container and the button
const button = document.getElementById("reorder-button");
const attributes = ['days', 'numplays', 'name', 'rating', 'size'];


// Add an event listener to the button
button.addEventListener("click", reorderDivs);

// Function to reorder the divs
function reorderDivs() {
	// Get all the divs in the container
	{% comment %} const container = document.getElementById("magic-2"); {% endcomment %}

	const containers = document.querySelectorAll(".sorting_container");
	const button = document.getElementById("reorder-button");


	let attributeValue = parseInt(button.dataset.index, 10) || 0;
	const attributeIndex = (attributeValue + 1) % attributes.length
	const attribute = attributes[attributeIndex]
	
	containers.forEach(container => {

		const divs = container.querySelectorAll(".sortable");
		console.log(attribute)

		// Create an array of the divs
		const divArray = Array.from(divs);

		// Sort the array of divs
		divArray.sort((a, b) => {
				const aValue = a.dataset[attribute];
				const bValue = b.dataset[attribute];

				// Check if the values are numeric
				if (!isNaN(aValue) && !isNaN(bValue)) {
						// Compare as numbers
						return Number(bValue) - Number(aValue);
				} else {
						// Compare as strings
						return aValue.localeCompare(bValue);
				}
		});

		// Clear the container
		container.innerHTML = "";

		// Add the sorted divs back to the container
		divArray.forEach((div) => container.appendChild(div));

	});
	button.dataset.index = attributeIndex;
}
	</script>
	<script src="https://unpkg.com/lucide@latest"></script>
  <script>
    lucide.createIcons();
  </script>
</body>

</html>
